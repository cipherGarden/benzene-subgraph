type Token @entity {
  id: ID!

  " Token contract address "
  address: Bytes!

  " Number of Decimals the token uses " 
  decimals: Int!

  " Name of the token "
  name: String!

  " Symbol of the token "
  symbol: String!

  " address of the advisor pool contract "
  advisors: Bytes!

  " address of the team pool contract "
  team: Bytes!

  " address of the game pool contract "
  game: Bytes!

  " total number of mint events "
  mintEventCount: Int!

}

type Account @entity {
  id: ID!
  transfers: [Transfer!]! @derivedFrom(field: "account")
}

type Transfer @entity {
  id: ID!
  account: Account!
  from: Bytes!
  to: Bytes!
  value: BigDecimal!
}

type Migrate @entity {
  id: ID!

  " the address of the legacy token contract to migrate tokens from "
  contract: Bytes!

  " address of token holder whose tokens will be migrated"
  owner: Bytes!

  " amount of tokens to be migrated "
  amount: BigDecimal!

}

type MintEvent @entity {
  id: ID!

  " Token address "
  token: Bytes!

  amount: BigInt!

  sender: Bytes!

  minter: Bytes!

  destination: Bytes!

  block: BigInt!

  timestamp: BigInt!

  transaction: Bytes!
}